@model GlobalGames.Models.ChangePasswordViewModel
@{
    ViewData["Title"] = "ChangePassword";
}

<h1 class="text-center">Change Password</h1>
<div class="row justify-content-center">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly"></div>

            <div class="text-center">

                <div class="form-group">
                    <label asp-for="OldPassword">Current password</label>
                    <div class="input-group mx-auto" style="max-width: 300px;">
                        <input asp-for="OldPassword" type="password" class="form-control" />
                        <span asp-validation-for="OldPassword" class="text-warning"></span>
                    </div>
                </div>

                <div class="form-group">
                    <label asp-for="NewPassword">New password</label>
                    <div class="input-group mx-auto" style="max-width: 300px;">
                        <input asp-for="NewPassword" type="password" class="form-control" />
                        <span asp-validation-for="NewPassword" class="text-warning"></span>
                    </div>
                </div>

                <div class="form-group">
                    <label asp-for="Confirm">Confirm</label>
                    <div class="input-group mx-auto" style="max-width: 300px;">
                        <input asp-for="Confirm" type="password" class="form-control" />
                        <span asp-validation-for="Confirm" class="text-warning"></span>
                    </div>
                </div>

                <div class="form-group">
                    <input type="submit" value="Change password" class="btn btn-primary" />
                    <a asp-action="ChangeUser" class="btn btn-success">Back to user</a>
                </div>

            </div>

        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
